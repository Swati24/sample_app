h1. Rails Application for a blog of articles

Rails 3.2 example application shows how to manage set of article's permissions among different user roles.

Gems Support -
* "Devise":https://github.com/plataformatec/devise gives you ready-made authentication and user management.
* "CanCan":https://github.com/ryanb/cancan provides authorization for administrator access.
* "Twitter Bootstrap":http://twitter.github.com/bootstrap/ is a front-end framework for CSS styling.
* "AASM":https://github.com/aasm/aasm is a tool to manage states.
* "BetterErrors":https://github.com/charliesome/better_errors is a tool to replace the standard Rails error page with a much better and more useful error page
* "Mailcatcher":https://github.com/sj26/mailcatcher is a tool to catches mail and serves it through a dream.
* "Annotate":https://github.com/ctran/annotate_models is a tool to summarize the current schema to the top or bottom of models, fixtures, routes etc.
* "WillPaginate":https://github.com/mislav/will_paginate for pagination


h2. Assumptions

* "A User can have only one role."
* "An editor can create or publish any article."
* "Guest is a visitor in logged out state."
* "Any user who logins into the app will become the reporter."
* "Only Admin can create an editor and the editor will have to forgot password to change the password and login. An editor can be notified via email."
* "An article can have only two states - drafted and published"
* "Once an article gets published it cannot be ubpublished or converted to drafted state."
